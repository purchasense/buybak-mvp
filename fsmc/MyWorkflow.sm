{"fsmc": 
    {
        "name": "MyWorkflow",
        "headers": [
            "from llama_index.llms.openai import OpenAI",
            "from buybakworkflow.events import *",
            "from pathlib import Path",
            "from typing import List",
            "from llama_index.core.workflow import Event",
            "from buybakworkflow.schemas import *",
            "from llama_index.core.workflow import ( StartEvent, StopEvent, Workflow, step, Event, Context)",
            "import click",
            "import asyncio",
            "import json",
            "import random",
            "import shutil",
            "import string",
            "import uuid",
            "import json",
            "import asyncio",
            "import inspect",
            "global_list = []"
        ],
        "dictionary": [
            {"class": "Booking", "attributes": [
                    {"name": "str", "field": "..., description=\"Name\""},
                    {"userid": "str", "field": "..., description=\"Unique UserID\""},
                    {"depart_airport_code": "str", "field": "..., description=\"Departure Airport Code\""},
                    {"arrival_airport_code": "str", "field": "..., description=\"Arrival Airport Code\""},
                    {"departure_date": "str", "field": "..., description=\"Depart Date\""},
                    {"return_date": "str", "field": "..., description=\"Return Date\""},
                    {"num_adults": "str", "field": "..., description=\"Number of adults\""},
                    {"num_children": "str", "field": "..., description=\"Number of Children\""}
                ]
            },
            {"class": "WorkflowStreamingEvent", "attributes": [
                    {"event_type": "Literal[\"agent\", \"input\"]", "field": "..., description=\"Type of the event\""},
                    {"event_state": "str", "field": "..., description=\"Finite State\""},
                    {"event_stimuli": "str", "field": "..., description=\"Stimulus applied to the state transition\""},
                    {"outline": "str", "field": "..., description=\"Outline\""},
                    {"message": "str", "field": "..., description=\"Message\""}
                ]
            },
            {"class": "ResearchTopic", "attributes": [
                    {"query": "str", "field": "..., example=\"example query\""}
                ]
            }
        ],
        "stimuli": [
            {"method": "FirstEvent", "args": "Event", "body": [{"first_output": "str"}]},
            {"method": "SecondEvent", "args": "Event", "body": [{"second_output": "str"}, {"response": "str"}]},
            {"method": "WfTimerEvent", "args": "Event", "body": [{"timer": "str"}, {"name": "str"}]},
            {"method": "TimerFiredEvent", "args": "Event", "body": [{"timer": "str"}, {"name": "str"}]},
            {"method": "GetUserEvent", "args": "Event", "body": [{"msg": "str"}]},
            {"method": "SetAIEvent", "args": "Event", "body": [{"result": "str"}]},
            {"method": "ForecastEvent", "args": "Event", "body": [{"query": "str"}]},
            {"method": "LiveMarketEvent", "args": "Event", "body": [{"md": "str"}]},
            {"method": "CompareMarketEvent", "args": "Event", "body": [{"md": "str"}]},
            {"method": "BuyOrSellEvent", "args": "Event", "body": [{"md": "str"}]},
            {"method": "FrenchWinesEvent", "args": "Event", "body": [{"query": "str"}]},
            {"method": "ShoppingCartEvent", "args": "Event", "body": [{"item": "str"}]}
        ],
        "membervars": [
            {"name": "sameer_here", "type": "str", "field": "..., description=\"placeholder\""}
        ],
        "steps": [
            {
                "state":        "__init__", 
                "args":         ["self", "*args", "**kwargs"], 
                "stimuli":      [], 
                "emits":      []
            },
            {
                "state":        "generic_q_state", 
                "args":         ["self", "ctx: Context"],
                "stimuli":      [{"stimulus": "StartEvent", "actions": [
                                                        {"action": "what_is_action", "args":["What are the wines I can query, in HTML Table"]},
                                                        {"action": "suneels_action_function", "args":["I am Suneel!"]}
                                                        ] 
                                  }], 
                "emits":        [{"event": "FirstEvent", "args": ["first_output=\"First step complete.\""]}]
            },
            {
                "state":        "start_timer_state", 
                "args":         ["self", "ctx: Context"],
                "stimuli":      [{"stimulus": "FirstEvent", "actions": [
                                                        {"action": "two_action_1", "args":["call action_1"]}
                                                        ] 
                                  }], 
                "emits":        [{"event": "WfTimerEvent", "args": ["timer=\"5\"", "name=\"timer_5\""]}]
            },
            {
                "state":        "wf_timer_state", 
                "args":         ["self", "ctx: Context"],
                "stimuli":      [{"stimulus": "WfTimerEvent", "actions": [
                                                        {"action": "generate_stream_event", "args":["agent", "WfTimerEvent", "step_timer", "outline", "armed, Waitime for Timer"]}, 
                                                        {"action": "armTimer", "args":["1", "state::step_timer"]}
                                                        ] 
                                  }], 
                "emits":        [{"event": "TimerFiredEvent", "args": ["timer=\"5\"", "name=\"timer_fired\""]}]
            },
            {
                "state":        "end_timer_state", 
                "args":         ["self", "ctx: Context"],
                "stimuli":      [{"stimulus": "TimerFiredEvent", "actions": [
                                                        {"action": "generate_stream_event", "args":["input", "SecondEvent", "step_three", "outline", "Timer Popped!"]}, 
                                                        {"action": "two_action_1", "args":["call action_2"]}
                                                        ] 
                                  }], 
                "emits":        [{"event": "GetUserEvent", "args": ["msg=\"Hello World\""]}]
            },
            {
                "state":        "user_input_state", 
                "args":         ["self", "ctx: Context"],
                "stimuli":      [{"stimulus": "GetUserEvent", "actions": [
                                                        {"action": "generate_stream_event", "args":["agent", "GetUserEvent", "step_four", "outline", "U can ask AI (forecast, describe, or Live-Market). Query?"]}, 
                                                        {"action": "conditional_fore_wine_live", "args":["ev.msg"]}
                                                        ] 
                                  }], 
                "emits":        [{"event": "ForecastEvent", "args": ["query=user_response"]},{"event": "FrenchWinesEvent", "args": ["query=user_response"]},{"event": "LiveMarketEvent", "args": ["md=user_response"]}] 
            },
            {
                "state":        "forecast_state", 
                "args":         ["self", "ctx: Context"],
                "stimuli":      [{"stimulus": "ForecastEvent", "actions": [
                                                        {"action": "conditional_forecast_ema", "args":["ev.query"]}
                                                        ] 
                                  }], 
                "emits":        [{"event": "GetUserEvent", "args": ["msg=user_response"]}, {"event": "StopEvent", "args": ["result=user_response"]}]
            },
            {
                "state":        "lookup_french_wines_state", 
                "args":         ["self", "ctx: Context"],
                "stimuli":      [{"stimulus": "FrenchWinesEvent", "actions": [
                                                        {"action": "buybak_french_wines_action", "args":["ev.query"]}
                                                        ] 
                                  }], 
                "emits":        [{"event": "GetUserEvent", "args": ["msg=\"Sameer\""]}]
            },
            {
                "state":        "market_data_state", 
                "args":         ["self", "ctx: Context"],
                "stimuli":      [
                                    {"stimulus": "LiveMarketEvent", "actions": [
                                            {"action": "conditional_market_action", "args":["ev.md"]}
                                        ] 
                                    }
                                 ], 
                "emits":        [{"event": "CompareMarketEvent", "args": ["md=user_response"]}, {"event": "StopEvent", "args": ["result=user_response"]}]
            },
            {
                "state":        "user_decision_state", 
                "args":         ["self", "ctx: Context"],
                "stimuli":      [
                                    {"stimulus": "CompareMarketEvent", "actions": [
                                            {"action": "conditional_compare_market_action", "args":["ev.md"]}
                                        ] 
                                    }
                                 ], 
                "emits":        [{"event": "BuyOrSellEvent", "args": ["md=user_response"]}, {"event": "LiveMarketEvent", "args": ["md=user_response"]}]
            },
            {
                "state":        "buy_sell_state", 
                "args":         ["self", "ctx: Context"],
                "stimuli":      [
                                    {"stimulus": "BuyOrSellEvent", "actions": [
                                            {"action": "generate_stream_event", "args":["agent", "BuyOrSellEvent", "buy_sell_state", "outline", "Choose Buy, Not, or Exit?"]}, 
                                            {"action": "conditional_buy_or_sell_action", "args":["ev.md"]}
                                        ] 
                                    }
                                 ], 
                "emits":        [{"event": "ShoppingCartEvent", "args": ["item=user_response"]}, {"event": "LiveMarketEvent", "args": ["md=user_response"]}, {"event": "StopEvent", "args": ["result=user_response"]}]
            },
            {
                "state":        "shopping_cart_state", 
                "args":         ["self", "ctx: Context"],
                "stimuli":      [
                                    {"stimulus": "ShoppingCartEvent", "actions": [
                                            {"action": "shopping_cart_action", "args":["ev.item"]}
                                        ] 
                                    }
                                 ], 
                "emits":        [{"event": "LiveMarketEvent", "args": ["md=\"ShoppingCartEnd\""]}]
            }
        ]
    }
}
